import os
import logging
import openai
from flask import Flask, request
from telegram import Bot, Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters
)
import threading

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# API-–∫–ª—é—á–∏
openai.api_key = os.environ.get("OPENAI_API_KEY")  # <-- –∏–∑ Render
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")  # <-- –∏–∑ Render

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)
bot = Bot(token=TELEGRAM_TOKEN)

# Telegram-–±–æ—Ç
application = Application.builder().token(TELEGRAM_TOKEN).build()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç. –Ø —Ç–≤–æ–π –¥–Ω–µ–≤–Ω–∏–∫. –ù–∞–ø–∏—à–∏, –∫–∞–∫ –ø—Ä–æ—à—ë–ª —Ç–≤–æ–π –¥–µ–Ω—å.")

# –û—Ç–≤–µ—Ç –Ω–∞ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text
    user_id = update.effective_user.id
    username = update.effective_user.username or "–ë–µ–∑ –Ω–∏–∫–∞"

    logger.info(f"üì® –û—Ç: {username} (ID: {user_id}) ‚Äì {user_input}")

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢—ã –¥–Ω–µ–≤–Ω–∏–∫–æ–≤—ã–π –ò–ò. –ù–µ –¥–∞—ë—à—å —Å–æ–≤–µ—Ç–æ–≤, –ø—Ä–æ—Å—Ç–æ —Å–ª—É—à–∞–µ—à—å –∏ –º—è–≥–∫–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å."},
                {"role": "user", "content": user_input}
            ]
        )
        reply = response["choices"][0]["message"]["content"]
        await update.message.reply_text(reply)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ OpenAI: {e}")
        await update.message.reply_text("–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

# Flask-–ø–∏–Ω–≥ –¥–ª—è Render
@app.route('/')
def home():
    return 'OK', 200

# –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def start_bot():
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    application.run_polling()

if __name__ == "__main__":
    threading.Thread(target=start_bot).start()
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
